# # Devohack ruby bedinner assignment

# # 1. Write Ruby program to get ruby version with patch number.

# p "#{RUBY_VERSION}"
# p "#{RUBY_PATCHLEVEL}"
# # p RUBY_VERSION


# # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# # 2. Write a Ruby program to display the current date and time.

# p "#{Time.new}"
# # p Time.new



# # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#  # 3. Write a Ruby program to create a new string which is n copies of a given string where n is a non-negative integer.

# puts "Enter a string: "
# str = gets.chomp
# puts "Enter a number: "
# int = gets.chomp.to_i

# # int.times {|i| puts "#{str}#{str*i}"}
# for j in (1..int)
#   puts str*j
# end


# # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# # 4. Write a Ruby program which accept the radius of a circle from the user and compute the parameter and area.

# puts "Enter radius of circle: "
# r = gets.chomp.to_i
# area = 3.14*r*r
# para = 2*3.14*r
# puts "area of circle #{area}"
# puts "parameter of circle #{para}"



# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# 5.Write a Ruby program to check whether a string starts with "if"

# v = gets.chomp
# puts !!v.match(/^if[\s\w+]/)



# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# 6. Write a Ruby program which accept the user's first and last name and print them in reverse order with a space between them.

# puts "Enter first name: "
# f = gets.chomp
# puts "Enter last name: "
# l = gets.chomp

# puts "Hello #{l} #{f}"




# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# 7. Write a Ruby program to accept a filename from the user print the extension of that.

# puts "Enter file name"
# f = gets.chomp
# e = f.match(/.\w+$/)
# puts "#{e}"


# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# 8. Write a Ruby program which accept the user's first and last name and print them in reverse order with a space between them.

# puts "Enter first name: "
# f = gets.chomp
# puts "Enter last name: "
# l = gets.chomp

# puts "Hello #{l} #{f}"



# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# 9. Write a Ruby program to check three numbers and return true if one or more of them are small. A number is called "small" if it is in the range 1..10 inclusive.
 
a = [21,34,34]
def check_number(arr)
  value = false
  arr.each do |i|
    if i <= 10 and i >= 1
      value = true
      break
    end
  end
  puts value
end

check_number(a)


# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
